basePath: /api/v1
definitions:
  api.Bill:
    properties:
      billData:
        $ref: '#/definitions/money.BillData'
      id:
        items:
          type: integer
        type: array
    type: object
  api.BlockInfo:
    properties:
      header:
        $ref: '#/definitions/types.Header'
      txHashes:
        items:
          items:
            type: integer
          type: array
        type: array
      unicityCertificate:
        $ref: '#/definitions/types.UnicityCertificate'
    type: object
  api.TxInfo:
    properties:
      blockNumber:
        type: integer
      transaction:
        $ref: '#/definitions/types.TransactionRecord'
      txOrderHash:
        items:
          type: integer
        type: array
      txRecordHash:
        items:
          type: integer
        type: array
    type: object
  imt.PathItem:
    properties:
      hash:
        items:
          type: integer
        type: array
      key:
        items:
          type: integer
        type: array
    type: object
  money.BillData:
    properties:
      backlink:
        description: Backlink (256-bit hash)
        items:
          type: integer
        type: array
      lastUpdate:
        description: The round number of the last transaction with the bill
        example: "0"
        type: string
      locked:
        description: locked status of the bill, non-zero value means locked
        example: "0"
        type: string
      value:
        description: The monetary value of this bill
        example: "0"
        type: string
    type: object
  restapi.ErrorResponse:
    properties:
      message:
        type: string
    type: object
  types.ClientMetadata:
    properties:
      feeCreditRecordID:
        items:
          type: integer
        type: array
      maxTransactionFee:
        type: integer
      timeout:
        type: integer
    type: object
  types.Header:
    properties:
      previousBlockHash:
        items:
          type: integer
        type: array
      proposerID:
        type: string
      shardID:
        items:
          type: integer
        type: array
      systemID:
        type: integer
    type: object
  types.InputRecord:
    properties:
      block_hash:
        description: hash of the block
        items:
          type: integer
        type: array
      hash:
        description: state hash to be certified
        items:
          type: integer
        type: array
      previous_hash:
        description: previously certified state hash
        items:
          type: integer
        type: array
      round_number:
        description: transaction system's round number
        type: integer
      sum_of_earned_fees:
        description: sum of the actual fees over all transaction records in the block
        type: integer
      summary_value:
        description: summary value to certified
        items:
          type: integer
        type: array
    type: object
  types.Payload:
    properties:
      attributes:
        items:
          type: integer
        type: array
      clientMetadata:
        $ref: '#/definitions/types.ClientMetadata'
      systemID:
        type: integer
      type:
        type: string
      unitID:
        items:
          type: integer
        type: array
    type: object
  types.ServerMetadata:
    properties:
      actualFee:
        type: integer
      processingDetails:
        items:
          type: integer
        type: array
      successIndicator:
        $ref: '#/definitions/types.TxStatus'
      targetUnits:
        items:
          items:
            type: integer
          type: array
        type: array
    type: object
  types.SignatureMap:
    additionalProperties:
      items:
        type: integer
      type: array
    type: object
  types.TransactionOrder:
    properties:
      feeProof:
        items:
          type: integer
        type: array
      ownerProof:
        items:
          type: integer
        type: array
      payload:
        $ref: '#/definitions/types.Payload'
    type: object
  types.TransactionRecord:
    properties:
      serverMetadata:
        $ref: '#/definitions/types.ServerMetadata'
      transactionOrder:
        $ref: '#/definitions/types.TransactionOrder'
    type: object
  types.TxStatus:
    enum:
    - 0
    - 1
    type: integer
    x-enum-varnames:
    - TxStatusFailed
    - TxStatusSuccessful
  types.UnicityCertificate:
    properties:
      input_record:
        $ref: '#/definitions/types.InputRecord'
      unicity_seal:
        $ref: '#/definitions/types.UnicitySeal'
      unicity_tree_certificate:
        $ref: '#/definitions/types.UnicityTreeCertificate'
    type: object
  types.UnicitySeal:
    properties:
      hash:
        items:
          type: integer
        type: array
      previous_hash:
        items:
          type: integer
        type: array
      root_chain_round_number:
        type: integer
      signatures:
        $ref: '#/definitions/types.SignatureMap'
      timestamp:
        type: integer
    type: object
  types.UnicityTreeCertificate:
    properties:
      sibling_hashes:
        items:
          $ref: '#/definitions/imt.PathItem'
        type: array
      system_description_hash:
        items:
          type: integer
        type: array
      system_identifier:
        type: integer
    type: object
info:
  contact: {}
  description: API to query blocks and transactions of Alphabill's Money Partition
  title: Alphabill Blockchain Explorer API
  version: "1.0"
paths:
  /address/{pubKey}/bills:
    get:
      consumes:
      - application/json
      description: Get bills associated with a specific public key
      parameters:
      - description: Public Key
        in: path
        name: pubKey
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: List of bills
          schema:
            items:
              $ref: '#/definitions/api.Bill'
            type: array
        "400":
          description: 'Error: Missing ''pubKey'' variable in the URL'
          schema:
            $ref: '#/definitions/restapi.ErrorResponse'
        "404":
          description: 'Error: Bills with specified public key not found'
          schema:
            $ref: '#/definitions/restapi.ErrorResponse'
      summary: Retrieve bills by public key
      tags:
      - Bills
  /blocks:
    get:
      description: Get blocks, given a start block number and limit.
      parameters:
      - description: optionally specify the start block number
        in: query
        name: startBlock
        type: string
      - description: optionally specify the number of blocks to return, defaults to
          10
        in: query
        name: limit
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/api.BlockInfo'
            type: array
      summary: Get blocks, given a start block number and limit.
      tags:
      - Blocks
  /blocks/{blockNumber}:
    get:
      consumes:
      - application/json
      description: Retrieves a block by using the provided block number as a path
        parameter, or retrieves the latest block if no number is specified.
      parameters:
      - description: Block number ('latest' or a specific number)
        in: path
        name: blockNumber
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Block information successfully retrieved
          schema:
            $ref: '#/definitions/api.BlockInfo'
        "400":
          description: Missing or invalid block number
          schema:
            type: string
        "404":
          description: No block found with the specified number
          schema:
            type: string
        "500":
          description: Internal server error, such as a failure to retrieve the block
          schema:
            type: string
      summary: Retrieve a blockchain block by number, or the latest if unspecified
      tags:
      - Blocks
  /blocks/{blockNumber}/txs:
    get:
      consumes:
      - application/json
      description: Retrieves a list of transactions for a given block number.
      parameters:
      - description: The block number for which to retrieve transactions
        in: path
        name: blockNumber
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Successfully retrieved list of transactions for the block
          schema:
            items:
              $ref: '#/definitions/api.TxInfo'
            type: array
        "400":
          description: Missing or invalid 'blockNumber' variable in the URL
          schema:
            type: string
        "404":
          description: No transactions found for the specified block number
          schema:
            type: string
      summary: Retrieve transactions by block number
      tags:
      - Transactions
  /txs:
    get:
      description: Retrieves a list of transactions.
      parameters:
      - description: The sequence number of the transaction to start from, if not
          provided, the latest transactions are returned
        in: query
        name: startSeqNumber
        type: string
      - description: The maximum number of transactions to retrieve, default 20
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Successfully retrieved list of transactions
          schema:
            items:
              $ref: '#/definitions/api.TxInfo'
            type: array
      summary: Retrieve transactions, latest first.
      tags:
      - Transactions
  /txs/{txHash}:
    get:
      consumes:
      - application/json
      description: Retrieves transaction details using a transaction hash provided
        as a path parameter.
      parameters:
      - description: The hash of the transaction to retrieve (HEX encoded)
        in: path
        name: txHash
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Successfully retrieved the transaction information
          schema:
            $ref: '#/definitions/api.TxInfo'
        "400":
          description: Missing 'txHash' variable in the URL
          schema:
            type: string
        "404":
          description: Transaction with the specified hash not found
          schema:
            type: string
        "500":
          description: Failed to load transaction details
          schema:
            type: string
      summary: Retrieve a transaction by hash
      tags:
      - Transactions
  /units/{unitID}/txs:
    get:
      consumes:
      - application/json
      description: Get transactions associated with a specific unit ID
      parameters:
      - description: Unit ID
        in: path
        name: unitID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: List of transactions
          schema:
            items:
              $ref: '#/definitions/api.TxInfo'
            type: array
        "400":
          description: 'Error: Missing ''unitID'' variable in the URL'
          schema:
            $ref: '#/definitions/restapi.ErrorResponse'
        "404":
          description: 'Error: Transaction with specified unit ID not found'
          schema:
            $ref: '#/definitions/restapi.ErrorResponse'
      summary: Retrieve transactions by unit ID
      tags:
      - Transactions
swagger: "2.0"
