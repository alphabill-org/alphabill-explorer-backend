{
    "swagger": "2.0",
    "info": {
        "description": "API to query blocks and transactions of Alphabill",
        "title": "Alphabill Blockchain Explorer API",
        "contact": {},
        "version": "1.0"
    },
    "basePath": "/api/v1",
    "paths": {
        "/address/{pubKey}/bills": {
            "get": {
                "description": "Get bills associated with a specific public key",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Bills"
                ],
                "summary": "Retrieve bills by public key",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Public Key",
                        "name": "pubKey",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of bills",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/domain.Bill"
                            }
                        }
                    },
                    "400": {
                        "description": "Error: Missing 'pubKey' variable in the URL",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Error: Bills with specified public key not found",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/blocks/{blockNumber}": {
            "get": {
                "description": "Retrieves a block for all given partitions by using the provided block number as a path parameter, or retrieves the latest block if no number is specified.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Blocks"
                ],
                "summary": "Retrieve a blockchain block by number, or the latest if unspecified",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Block number ('latest' or a specific number)",
                        "name": "blockNumber",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "List of partitions to get the blocks for. If not provided then get for all partitions",
                        "name": "partitionID",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Block information successfully retrieved",
                        "schema": {
                            "$ref": "#/definitions/api.BlockResponse"
                        }
                    },
                    "400": {
                        "description": "Missing or invalid block number",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "No block found with the specified number",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error, such as a failure to retrieve the block",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/partitions/{partitionID}/blocks": {
            "get": {
                "description": "Get blocks in a single partition, given a start block number and limit.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Blocks"
                ],
                "summary": "Get blocks in a single partition, given a start block number and limit.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Partition ID to get the blocks for",
                        "name": "partitionID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "optionally specify the start block number",
                        "name": "startBlock",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "optionally specify the number of blocks to return, defaults to 10",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "whether to include blocks without transactions, defaults to true",
                        "name": "includeEmpty",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/api.BlockInfo"
                            }
                        }
                    }
                }
            }
        },
        "/partitions/{partitionID}/blocks/{blockNumber}/txs": {
            "get": {
                "description": "Retrieves a list of transactions for a given block number.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Transactions"
                ],
                "summary": "Retrieve transactions by block number",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Partition ID to get the transactions for",
                        "name": "partitionID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "The block number for which to retrieve transactions",
                        "name": "blockNumber",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully retrieved list of transactions for the block",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/api.TxInfo"
                            }
                        }
                    },
                    "400": {
                        "description": "Missing or invalid 'blockNumber' variable in the URL",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "No transactions found for the specified block number",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/partitions/{partitionID}/txs": {
            "get": {
                "description": "Retrieves a list of transactions.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Transactions"
                ],
                "summary": "Retrieve transactions, latest first.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Partition ID to get the transactions for",
                        "name": "partitionID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "ID of the transaction to start from, if not provided, the latest transactions are returned",
                        "name": "startID",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "The maximum number of transactions to retrieve, default 20",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully retrieved list of transactions",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/api.TxInfo"
                            }
                        }
                    }
                }
            }
        },
        "/round-number": {
            "get": {
                "description": "Retrieve round and epoch number for each partition",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Info"
                ],
                "summary": "Retrieve round and epoch number for each partition",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/partition.RoundInfo"
                            }
                        }
                    }
                }
            }
        },
        "/search": {
            "get": {
                "description": "Retrieve blocks, transactions and units matching the search key",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Search"
                ],
                "summary": "Retrieve blocks, transactions and units matching the search key",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Search key",
                        "name": "q",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Filter results by partition ID(s)",
                        "name": "partitionID",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Block information successfully retrieved",
                        "schema": {
                            "$ref": "#/definitions/api.SearchResponse"
                        }
                    },
                    "400": {
                        "description": "invalid partitionID",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "no results found",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/txs/{txHash}": {
            "get": {
                "description": "Retrieves transaction details using a transaction hash provided as a path parameter.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Transactions"
                ],
                "summary": "Retrieve a transaction by hash",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The hash of the transaction to retrieve (HEX encoded)",
                        "name": "txHash",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully retrieved the transaction information",
                        "schema": {
                            "$ref": "#/definitions/api.TxInfo"
                        }
                    },
                    "400": {
                        "description": "Missing 'txHash' variable in the URL",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Transaction with the specified hash not found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Failed to load transaction details",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/units/{unitID}/txs": {
            "get": {
                "description": "Get transactions associated with a specific unit ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Transactions"
                ],
                "summary": "Retrieve transactions by unit ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Unit ID (0xHEX encoded)",
                        "name": "unitID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of transactions",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/api.TxInfo"
                            }
                        }
                    },
                    "400": {
                        "description": "Error: Missing 'unitID' variable in the URL",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Error: Transactions with specified unit ID not found",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "api.BlockInfo": {
            "type": "object",
            "properties": {
                "blockNumber": {
                    "type": "integer"
                },
                "partitionID": {
                    "type": "integer"
                },
                "partitionTypeID": {
                    "type": "integer"
                },
                "previousBlockHash": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "proposerID": {
                    "type": "string"
                },
                "shardID": {
                    "$ref": "#/definitions/types.ShardID"
                },
                "txHashes": {
                    "type": "array",
                    "items": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        }
                    }
                },
                "unicityCertificate": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                }
            }
        },
        "api.BlockResponse": {
            "type": "object",
            "additionalProperties": {
                "$ref": "#/definitions/api.BlockInfo"
            }
        },
        "api.ErrorResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                }
            }
        },
        "api.SearchResponse": {
            "type": "object",
            "properties": {
                "blocks": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "#/definitions/api.BlockInfo"
                    }
                },
                "txs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/api.TxInfo"
                    }
                },
                "unit": {
                    "$ref": "#/definitions/types.Unit-any"
                },
                "unitIDs": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "array",
                        "items": {
                            "type": "array",
                            "items": {
                                "type": "integer"
                            }
                        }
                    }
                }
            }
        },
        "api.TxInfo": {
            "type": "object",
            "properties": {
                "blockNumber": {
                    "type": "integer"
                },
                "partitionID": {
                    "type": "integer"
                },
                "transaction": {
                    "$ref": "#/definitions/types.TransactionRecord"
                },
                "txOrderHash": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "txRecordHash": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                }
            }
        },
        "domain.Bill": {
            "type": "object",
            "properties": {
                "counter": {
                    "type": "integer"
                },
                "id": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "lockStatus": {
                    "type": "integer"
                },
                "networkID": {
                    "$ref": "#/definitions/types.NetworkID"
                },
                "partitionID": {
                    "type": "integer"
                },
                "value": {
                    "type": "integer"
                }
            }
        },
        "mt.PathItem": {
            "type": "object",
            "properties": {
                "directionLeft": {
                    "description": "true - left from parent, false - right from parent",
                    "type": "boolean"
                },
                "hash": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                }
            }
        },
        "partition.RoundInfo": {
            "type": "object",
            "properties": {
                "epochNumber": {
                    "type": "integer"
                },
                "partitionID": {
                    "type": "integer"
                },
                "partitionTypeID": {
                    "type": "integer"
                },
                "roundNumber": {
                    "type": "integer"
                }
            }
        },
        "types.NetworkID": {
            "type": "integer",
            "enum": [
                1,
                2,
                3
            ],
            "x-enum-varnames": [
                "NetworkMainNet",
                "NetworkTestNet",
                "NetworkLocal"
            ]
        },
        "types.ServerMetadata": {
            "type": "object",
            "properties": {
                "actualFee": {
                    "type": "integer"
                },
                "processingDetails": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "successIndicator": {
                    "$ref": "#/definitions/types.TxStatus"
                },
                "targetUnits": {
                    "type": "array",
                    "items": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        }
                    }
                }
            }
        },
        "types.ShardID": {
            "type": "object"
        },
        "types.StateTreeCert": {
            "type": "object",
            "properties": {
                "leftSummaryHash": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "leftSummaryValue": {
                    "type": "string",
                    "example": "0"
                },
                "path": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/types.StateTreePathItem"
                    }
                },
                "rightSummaryHash": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "rightSummaryValue": {
                    "type": "string",
                    "example": "0"
                }
            }
        },
        "types.StateTreePathItem": {
            "type": "object",
            "properties": {
                "logsHash": {
                    "description": "(z)",
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "siblingSummaryHash": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "siblingSummaryValue": {
                    "type": "string",
                    "example": "0"
                },
                "unitId": {
                    "description": "(ι′)",
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "value": {
                    "description": "(V)",
                    "type": "string",
                    "example": "0"
                }
            }
        },
        "types.TransactionRecord": {
            "type": "object",
            "properties": {
                "serverMetadata": {
                    "$ref": "#/definitions/types.ServerMetadata"
                },
                "transactionOrder": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "version": {
                    "type": "integer"
                }
            }
        },
        "types.TxStatus": {
            "type": "integer",
            "enum": [
                0,
                1,
                2
            ],
            "x-enum-varnames": [
                "TxStatusFailed",
                "TxStatusSuccessful",
                "TxErrOutOfGas"
            ]
        },
        "types.Unit-any": {
            "type": "object",
            "properties": {
                "data": {},
                "networkId": {
                    "$ref": "#/definitions/types.NetworkID"
                },
                "partitionId": {
                    "type": "integer"
                },
                "stateProof": {
                    "$ref": "#/definitions/types.UnitStateProof"
                },
                "unitId": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                }
            }
        },
        "types.UnitStateProof": {
            "type": "object",
            "properties": {
                "stateTreeCert": {
                    "$ref": "#/definitions/types.StateTreeCert"
                },
                "unicityCert": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "unitId": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "unitLedgerHash": {
                    "description": "x_ - previous state hash of type H ∪ {⊥}",
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "unitTreeCert": {
                    "$ref": "#/definitions/types.UnitTreeCert"
                },
                "unitValue": {
                    "description": "V0 - data summary of type PD.V",
                    "type": "string",
                    "example": "0"
                },
                "version": {
                    "type": "integer"
                }
            }
        },
        "types.UnitTreeCert": {
            "type": "object",
            "properties": {
                "dataHash": {
                    "description": "s",
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "path": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/mt.PathItem"
                    }
                },
                "txrHash": {
                    "description": "t",
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                }
            }
        }
    }
}